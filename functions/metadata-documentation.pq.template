let
    func = (FromYear as number, ToYear as number, optional StartofFiscalYear as number) =>
        let
            FUNCTIONCODE = null
        in
            FUNCTIONCODE,

    TableToMCode = 
        let
            compressedCode = "zVTRatswFH33V1xUCDYYbXkdTaF1Eyg0HaShLyEU1b5OzGQpk+QlIeRf8i35sklynMbOBnucDbZ879HRuefK4mggr0QKAwAIIJyyD47ANBg3iGBwF3A0wfFwPPjU8TA4jWIffC60+Z4nklel0J9JOpUTudY1XVRDEyl+oTJT2SGiIyVLxxN6WHO3mOPjoZV8XfHCGFTUDx62L9IsC7EIoy5QVJz/S2y4MYq9MV6hpkOlpDpnz+oVvhplF7lQfp9ltcC29Hal3aVIUmkjS9KNI0uXlhg3hiay/CgEhs4DOlVM6FyqMpzVi/XncYMucni3rXMVgVmiAOKGBJBrBGIv6IFnnOCKsxRD/+EMD9+j2AH8g5DIAv3bUpMYSNStf2R5L+onA7jxWySEnZ12Rvc6FdQ+1bpfWInnLWEpiFuIXCzV88F9DDchzyPYWeq/En/2Y1b76Uy5mNuh3cMeIiBBITrVxEEm06pEYZgppLBmzoLHywh1st3vQaDZ2uNEZtbeuAN8RJ2qYnWisfCmcRoYwG1qJ915itsvfgxgpM1orwNkDmNwcdtIZmBd2JamCpk5BbzbUAjXZ/hZodoCZoWRil4reZZi8f+oSeyshbSIQePhNeZVVipFj7hOvqHSTRl9+pX2ryH3lVlK5RFP5Q+EEfKsZEJ8g/V6TadLfHhKU1lZuDA0lSX8Qedww8oVR21ZdrO2fSdZvu+NxgnqipvT53w/D9wBah2xT/AnSfPTTbcrDN0hG7fjYzQsY4aFdfQMi2Jo7ckoCn4D",
            func = Expression.Evaluate(Text.FromBinary(Binary.Decompress(Binary.FromText(compressedCode), Compression.Deflate)), #shared)
        in
            func,

    ExampleResult = Table.Combine({Table.FirstN(func(2020, Date.Year(DateTime.LocalNow())), 1), Table.LastN(func(2020, Date.Year(DateTime.LocalNow())), 1)}),

    fntype = type function
        (
            FromYear as (type number meta [
                Documentation.FieldCaption = "From Year",
                Documentation.FieldDescription = "Earliest calendar year in the date table, which will start on January 1",
                Documentation.SampleValues = {2022}
            ]),
            ToYear as (type number meta [
                Documentation.FieldCaption = "To Year",
                Documentation.FieldDescription = "Latest calendar year in the date table, which will end on December 31",
                Documentation.SampleValues = {Text.From(Date.Year(DateTime.LocalNow()))}
            ]),
            optional StartofFiscalYear as (type number meta [
                Documentation.FieldCaption = "Start of Fiscal Year",
                Documentation.FieldDescription = "Month number of the first month in the fiscal year.",
                Documentation.SampleValues = {"10"}
            ])
        ) as table meta
            [
                Documentation.Name = "generateDateTable",
                Documentation.LongDescription = "This function generates a date table from FromYear to ToYear with the following fields:#(cr)#(lf)" & Text.Combine(Record.FieldNames(Table.First(ExampleTable)), ", ") & ". For fiscal year calculations, StartofFiscalYear establishes the first month of the fiscal year.",
                Documentation.Examples =
                {
                    [
                        Description = "Create a list of dates from 2020 to the current year. Do not provide Fiscal Year columns.",
                        Code = "generateDateTable(2020, Date.Year(DateTime.LocalNow()))",
                        Result = TableToMCode(ExampleTable)
                    ]
                }
            ]

in
    Value.ReplaceType(func,fntype)
